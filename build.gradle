plugins {
  id 'org.springframework.boot' version '2.7.6'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'java'
  id 'de.undercouch.download' version '4.1.1'
}

apply plugin: 'java'

group = 'org.springframework.samples'
version = '2.7.6-withagent'
sourceCompatibility = '11'

def OPENTELEMETRY_VERSION = '1.20.1'

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = uri("https://s01.oss.sonatype.org/content/groups/public/")
  }
}

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.2.2"

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'org.ehcache:ehcache'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'mysql:mysql-connector-java'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'

  //Enables instrumentation using @WithSpan
  implementation("io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:${OPENTELEMETRY_VERSION}")

  // used for ClientTester
  implementation("com.squareup.okhttp3:okhttp:4.9.3")
}

tasks.named('test') {
  useJUnitPlatform()
}

task runClientTester(type: JavaExec) {
    group = "Execution"
    description = "Run Client Tester"
    classpath = sourceSets.main.runtimeClasspath
    main = 'petclinic.client.ClientTester'
}

bootJar {
    dependsOn("downloadOtelAgent")
    dependsOn("downloadDigmaAgentExtension")
}

// Download the OpenTelemetry java agent and put it in the build directory
task downloadOtelAgent(type: Download) {
    src "https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar"
    dest project.buildDir.toString() + "/otel/opentelemetry-javaagent.jar"
    overwrite true
}

// Download the Digma OpenTelemetry agent extension and put it in the build directory
task downloadDigmaAgentExtension(type: Download) {
    //src "https://s01.oss.sonatype.org/content/repositories/snapshots/io/github/digma-ai/digma-otel-agent-extension/0.4.17-SNAPSHOT/digma-otel-agent-extension-0.4.17-20221127.104057-1-all.jar"
    src "https://s01.oss.sonatype.org/content/repositories/releases/io/github/digma-ai/digma-otel-agent-extension/0.4.22/digma-otel-agent-extension-0.4.22.jar"
    dest project.buildDir.toString() + "/otel/digma-otel-agent-extension.jar"
    overwrite true
}
