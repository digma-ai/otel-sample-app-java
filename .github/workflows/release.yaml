name: Create Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17  # Specify your JDK version
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Build the JAR file
      - name: Build JAR
        run: ./gradlew bootJar downloadDigmaAgentExtension downloadOtelAgent

      # Build Docker Image
      - name: Build Docker Image
        run: docker build -t myproject:${{ github.ref_name }} .

      # Save Docker Image as Artifact
      - name: Save Docker Image
        run: |
          docker save myproject:${{ github.ref_name }} > myproject-${{ github.ref_name }}.tar
          echo "Docker image saved as myproject-${{ github.ref_name }}.tar"

      # Upload Artifacts to Release
      - name: Upload Artifacts
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/*.jar
          asset_name: myproject-${{ github.ref_name }}.jar
          content_type: application/java-archive

      - name: Upload Docker Image
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: myproject-${{ github.ref_name }}.tar
          asset_name: myproject-${{ github.ref_name }}.tar
          content_type: application/x-tar
